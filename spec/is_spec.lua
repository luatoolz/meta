describe("is", function()
  local is
  setup(function()
    is = require 'meta.is'
  end)
  teardown(function()
    assert.truthy(require('meta.module.chain') - 'testdata')
  end)
  it("meta", function()
    assert.truthy(is)
    assert.truthy(is.callable)
    assert.equal(is, is ^ 'meta')

    assert.equal(is, is ^ 'testdata')
    assert.truthy(require('meta.module.chain') - 'testdata')
  end)
  it("index", function()
    assert.equal('is', is[1])
  end)
  it("tostring", function()
    assert.equal('is', tostring(is))
    assert.equal('is/has', tostring(is.has))
  end)
  it("predicates", function()
    assert.truthy(is.callable(is.like))
    assert.truthy(is.callable(is.has.value))

    assert.truthy(is.callable(is.match[false]))
    assert.truthy(is.callable(is.match.space))
    assert.truthy(is.match.space('  '))

    assert.is_table(is.table)
    assert.is_function(is.table[true])

    assert.is_function(is.null)
    assert.is_function(is.string)
    assert.truthy(is.callable(is.number))
    assert.is_function(is.func)
    assert.is_function(is.userdata)
    assert.is_function(is.thread)
    assert.is_function(is.CFunction)
    assert.is_function(is.cfunction)

    assert.truthy(is.table({}))
    assert.truthy(is.string(''))
    assert.truthy(is.func(string.lower))
    assert.truthy(is.number(5))
    assert.truthy(is.null(nil))
  end)
end)