describe("is", function()
  local is
  setup(function()
    require 'meta'
    is = require "meta.is" ^ 'testdata'
  end)
  it("meta", function()
    assert.truthy(is)
    assert.truthy(is.callable)
    assert.equal(is, is ^ 'meta')
  end)
  it("index", function()
    assert.equal('is', is[1])
    assert.equal('is', is[-1])
    assert.same({'is'}, is[{}])
    assert.is_nil(is[0])
  end)
  it("tostring", function()
    assert.equal('is', tostring(is))
    assert.equal('is.has', tostring(is.has))
  end)
  it("path", function()
    local path = string.joiner('/')
    assert.equal('a/b/c', path({'a', 'b'}, 'c'))
    assert.equal('is/has', path(is, 'has'))
  end)
  it("predicates", function()
    assert.truthy(is.callable(is.like))
    assert.truthy(is.callable(is.has.value))

    assert.truthy(is.callable(is.match[false]))
    assert.truthy(is.callable(is.match.space))
    assert.truthy(is.match.space('  '))

    assert.callable(is.table)
    assert.callable(is.null)
    assert.callable(is.string)
    assert.callable(is.number)
    assert.callable(is.func)
    assert.callable(is.userdata)
    assert.callable(is.thread)
    assert.callable(is.CFunction)

    assert.truthy(is.table({}))
    assert.truthy(is.string(''))
    assert.truthy(is.func(string.lower))
    assert.truthy(is.number(5))
    assert.truthy(is.null(nil))
  end)
end)