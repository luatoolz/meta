describe("pkg", function()
  local iload, pkg, log
  setup(function()
    iload = require "meta.pkg.iload"
    pkg = require "meta.pkg"
    log = require "meta.cache.log"
  end)
  it("meta", function()
    assert.is_function(iload)
    assert.is_table(pkg)
    assert.equal('meta.pkg', tostring(pkg))
    assert.equal('meta.pkg', pkg('meta.pkg') .. '')
    assert.equal('meta.pkg', pkg('meta.pkg') .. nil)
    assert.equal('meta.pkg', tostring(pkg('meta.pkg')))
  end)
  it("positive", function()
    assert.equal(2, #pkg('meta.pkg')[true])
    assert.equal(pkg('meta.pkg.iload', 'lua/meta/pkg/iload.lua'), pkg('meta.pkg.iload', 'lua/meta/pkg/iload.lua'))
    assert.equal(pkg('meta.pkg'), pkg('meta.pkg', 'lua/meta/pkg/init.lua'))
    assert.equal(iload, pkg.iload)

    log.report=true
    assert.is_nil(pkg.noneexistent)
    log.report=false
  end)
  it("negative", function()
    assert.is_nil(pkg(''))
    assert.is_nil(pkg('',''))
    assert.is_nil(pkg('meta',''))
    assert.is_nil(pkg('meta','meta'))
    assert.is_nil(pkg({}))
    assert.is_nil(pkg({'meta.is', 'lua/meta/is.lua'}))
    assert.is_nil(pkg({},{}))
    assert.is_nil(pkg({'meta.is'}))
    assert.is_nil(pkg({'meta.is'},{'lua/meta/is.lua'}))
    assert.is_nil(pkg(true))
    assert.is_nil(pkg(true, true))
    assert.is_nil(pkg(false))
    assert.is_nil(pkg(false, false))
    assert.is_nil(pkg(0))
    assert.is_nil(pkg(0, 0))
    assert.is_nil(pkg(1))
    assert.is_nil(pkg(1, 1))
    assert.is_nil(pkg(2))
    assert.is_nil(pkg(2, 2))
    assert.is_nil(pkg(string.format))
    assert.is_nil(pkg(string.format, string.format))
  end)
  it("nil", function()
    assert.is_nil(pkg(nil, nil, nil))
    assert.is_nil(pkg(nil, nil))
    assert.is_nil(pkg(nil))
    assert.is_nil(pkg())
  end)
end)