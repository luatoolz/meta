describe("iload", function()
  local iload, pkg
  setup(function()
    iload = require "meta.pkg.iload"
    pkg = require "meta.pkg"
  end)
  it("meta", function()
    assert.is_function(iload)
  end)
  it("positive", function()
--    assert.equal(pkg, iload('meta', 'pkg'))
    assert.equal(iload, iload('meta.pkg', 'iload'))
    assert.equal(iload, iload(pkg('meta.pkg'), 'iload'))
    assert.equal(iload, iload(pkg('meta.pkg.iload', 'lua/meta/pkg/iload.lua'), 'iload'))
    assert.equal(iload, iload(pkg('meta.pkg'), 'iload'))
  end)
  it("negative", function()
    assert.falsy(iload(''))
    assert.falsy(iload('',''))
    assert.falsy(iload('meta',''))
--    assert.falsy(iload('meta','meta'))
    assert.falsy(iload({}))
    assert.falsy(iload({'meta.is', 'lua/meta/is.lua'}))
    assert.falsy(iload({},{}))
    assert.falsy(iload({'meta.is'}))
    assert.falsy(iload({'meta.is'},{'lua/meta/is.lua'}))
    assert.falsy(iload(true))
    assert.falsy(iload(true, true))
    assert.falsy(iload(false))
    assert.falsy(iload(false, false))
    assert.falsy(iload(0))
    assert.falsy(iload(0, 0))
    assert.falsy(iload(1))
    assert.falsy(iload(1, 1))
    assert.falsy(iload(2))
    assert.falsy(iload(2, 2))
    assert.falsy(iload(string.format))
    assert.falsy(iload(string.format, string.format))
  end)
  it("nil", function()
    assert.is_nil(iload(nil, nil, nil))
    assert.is_nil(iload(nil, nil))
    assert.is_nil(iload(nil))
    assert.is_nil(iload())
  end)
end)
