describe("no.unroot", function()
	local meta, is, no
	setup(function()
    meta = require "meta"
    is = meta.is ^ 'testdata'
    no = meta.no
	end)
  it("meta", function()
    assert.truthy(is)
    assert.truthy(no.unroot)
    assert.truthy(is.callable(no.unroot))
  end)
  it("positive", function()
    assert.equal('is/root', no.unroot('is/root'))
    assert.equal('is/root', no.unroot('meta/is/root'))
    assert.equal('loader', no.unroot('meta.loader'))
    assert.equal('loader', no.unroot('meta/loader'))
    assert.equal('meta', no.unroot('meta'))
    assert.equal('', no.unroot(''))

    assert.equal('files/a', no.unroot('testdata/files/a'))
    assert.equal('files.a', no.unroot('testdata/files.a'))
    assert.equal('files/a', no.unroot('testdata.files/a'))
    assert.equal('files.a', no.unroot('testdata.files.a'))

    assert.equal('files/b', no.unroot('testdata/files/b'))
    assert.equal('files/b/q', no.unroot('testdata/files/b/q'))
    assert.equal('files/b/a', no.unroot('testdata/files/b/a'))
    assert.equal('files/b/x', no.unroot('testdata/files/b/x'))
  end)
  it("negative", function()
    assert.is_nil(no.unroot({}))
    assert.is_nil(no.unroot({'type'}))
    assert.is_nil(no.unroot(0))
    assert.is_nil(no.unroot(false))
    assert.is_nil(no.unroot(true))
  end)
  it("nil", function()
    assert.is_nil(no.unroot(nil))
    assert.is_nil(no.unroot())
  end)
end)