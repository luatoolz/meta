describe("no.sub", function()
	local meta, is, no
	setup(function()
    meta = require "meta"
    is = meta.is
    no = meta.no
	end)
  it("meta", function()
    assert.truthy(is)
    assert.truthy(no.sub)
    assert.truthy(is.callable(no.sub))
  end)
  it("positive", function()
    assert.ends('t', no.sub('t'))
    assert.ends('t/some', no.sub('t.some'))
    assert.ends('t/some', no.sub('t/some'))
    assert.ends('t/some', no.sub('t', 'some'))
    assert.ends('t/any/some', no.sub('t.any', 'some'))
    assert.ends('t/any/some', no.sub('t/any', 'some'))
    assert.ends('t/any/some.com', no.sub('t.any', 'some.com'))
    assert.ends('t/any/some.com', no.sub('t/any', 'some.com'))
    assert.ends('testdata/init1/file', no.sub('testdata/init1/file'))
    assert.ends('testdata/init1/file', no.sub('testdata.init1.file'))
    assert.ends('t/a/b/c/d/e/f/g/h', no.sub('t', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'))
  end)
  it("negative", function()
    assert.is_nil(no.sub(''))
    assert.is_nil(no.sub({}))
    assert.is_nil(no.sub({'type'}))
    assert.is_nil(no.sub(0))
    assert.is_nil(no.sub(false))
    assert.is_nil(no.sub(true))
  end)
  it("nil", function()
    assert.is_nil(no.sub(nil, nil))
    assert.is_nil(no.sub(nil))
    assert.is_nil(no.sub())
  end)
end)