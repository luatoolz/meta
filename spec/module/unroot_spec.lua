describe("module.unroot", function()
	local meta, unroot
	setup(function()
    meta = require 'meta'
    _ = meta.is ^ 'testdata'
    unroot = require 'meta.module.unroot'
	end)
  it("meta", function()
    assert.callable(unroot)
  end)
  it("positive", function()
    assert.equal('is/root', unroot('is/root'))
    assert.equal('is/root', unroot('meta/is/root'))
    assert.equal('loader', unroot('meta.loader'))
    assert.equal('loader', unroot('meta/loader'))
    assert.equal('meta', unroot('meta'))
    assert.equal('', unroot(''))

    assert.equal('files/a', unroot('testdata/files/a'))
    assert.equal('files.a', unroot('testdata/files.a'))
    assert.equal('files/a', unroot('testdata.files/a'))
    assert.equal('files.a', unroot('testdata.files.a'))

    assert.equal('files/b', unroot('testdata/files/b'))
    assert.equal('files/b/q', unroot('testdata/files/b/q'))
    assert.equal('files/b/a', unroot('testdata/files/b/a'))
    assert.equal('files/b/x', unroot('testdata/files/b/x'))
  end)
  it("negative", function()
    assert.is_nil(unroot({}))
    assert.is_nil(unroot({'type'}))
    assert.is_nil(unroot(0))
    assert.is_nil(unroot(false))
    assert.is_nil(unroot(true))
  end)
  it("nil", function()
    assert.is_nil(unroot(nil))
    assert.is_nil(unroot())
  end)
end)