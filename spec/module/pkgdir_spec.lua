describe("module.pkgdir", function()
  local meta, is, pkgdir, pkgdirs, seen, module
  setup(function()
    meta = require "meta"
    module = meta.module
    is = meta.is
    pkgdir = require "meta.module.pkgdir"
    pkgdirs = (table() .. package.path:gmatch('[^;]*')) * pkgdir
    seen = require 'meta.seen'
  end)
  it("meta", function()
    assert.truthy(is)
    assert.truthy(is.callable(pkgdir))
    assert.truthy(is.callable(pkgdirs))
  end)
  describe("pkgdir", function()
    it("tostring", function()
      assert.equal('lua/?.lua',                   tostring(pkgdirs[1]))
      assert.equal('lua/?/init.lua',              tostring(pkgdirs[2]))
    end)
    it("__index", function()
      assert.is_nil(pkgdirs[1].meta)
      assert.is_nil(pkgdirs[1][module('meta')])
      assert.equal('lua/meta/is/init.lua',        pkgdirs[2]['meta/is'])
      assert.equal('lua/meta/is/init.lua',        pkgdirs[2][module('meta/is')])
      assert.equal('lua/meta/loader.lua',         pkgdirs[1]['meta/loader'])
      assert.equal('lua/meta/loader.lua',         pkgdirs[1][module('meta/loader')])

      assert.is_nil(pkgdirs[2]['meta/loader'])
      assert.equal('lua/meta/init.lua',           pkgdirs[2].meta)

      assert.equal('lua/meta/module/pkgdir.lua',  pkgdirs[1]['meta/module/pkgdir'])
    end)
    it("__call", function()
      assert.equal('lua/meta/loader.lua',         pkgdirs[1]('lua/meta/loader.lua'))
      assert.equal('lua/meta/mcache/init.lua',    pkgdirs[2]('lua/meta/mcache'))
      assert.equal('lua/meta/init.lua',           pkgdirs[2]('lua/meta'))
      assert.is_nil(pkgdirs[1]('lua/meta'))

      assert.equal('lua/meta/loader.lua',         pkgdirs[1](module('lua/meta/loader.lua')))
      assert.equal('lua/meta/mcache/init.lua',    pkgdirs[2](module('lua/meta/mcache')))
      assert.equal('lua/meta/init.lua',           pkgdirs[2](module('lua/meta')))
      assert.is_nil(pkgdirs[1](module('lua/meta')))
    end)
    it("__div", function()
      assert.equal('lua/meta/init.lua',           pkgdirs[2] / 'meta')
      assert.equal('lua/meta/init.lua',           pkgdirs[2] / module('meta'))

      assert.equal('lua/meta/mcache/init.lua',    pkgdirs[2] / 'meta/mcache')
      assert.equal('lua/meta/mcache/init.lua',    pkgdirs[2] / module('meta/mcache'))
    end)
    it("__mul", function()
      assert.equal('lua/meta',                    tostring(pkgdirs[1]*'meta'))
      assert.equal('lua/meta',                    tostring(pkgdirs[2]*'meta'))

      assert.equal('lua/meta',                    tostring(pkgdirs[1]*module('meta')))
      assert.equal('lua/meta',                    tostring(pkgdirs[2]*module('meta')))
    end)
    it("__mod", function()
      assert.same({root='lua/meta/mcache/root.lua'}, pkgdirs%'meta/mcache')

      assert.same({root='lua/meta/mcache/root.lua'}, table()..pkgdirs[1]%'meta/mcache')
      assert.same({root='lua/meta/mcache/root.lua'}, table()..pkgdirs[1]%module('meta/mcache'))

      assert.is_nil((table()..pkgdirs[1]%'meta')['assert.d'])
      assert.equal('lua/meta/assert.d/init.lua',  (table()..pkgdirs[2]%'meta')['assert.d'])

      assert.equal('lua/meta/fn/swap.lua',        (pkgdirs%'meta/fn').swap)
    end)
  end)
  describe("pkgdirs", function()
    it("value", function()
      assert.same({'lua/?.lua', 'lua/?/init.lua', '?.lua', '?/init.lua'}, (pkgdirs * tostring)[{1, 4}])
    end)
    it("__mul", function()
      assert.equal('lua/meta',                    tostring((pkgdirs*'meta')[1]))
      assert.equal('lua/meta',                    tostring((pkgdirs*'meta')[2]))

      assert.same({'lua/meta'},                   pkgdirs[{1, 4}]*'meta'*tostring*seen())

      assert.equal('lua/meta/is',                 tostring((pkgdirs*'meta/is')[1]))
      assert.equal('lua/meta/is',                 tostring((pkgdirs*'meta/is')[2]))
    end)
    it("__div", function()
      assert.equal('lua/meta/init.lua',           pkgdirs[{1, 4}] / 'meta')
      assert.equal('lua/meta/loader.lua',         pkgdirs[{1, 4}] / 'meta/loader')

      assert.equal('lua/meta/loader.lua',         pkgdirs/'meta/loader')
      assert.equal('lua/meta/module/pkgdir.lua',  pkgdirs/'meta/module/pkgdir')
      assert.equal('lua/meta/init.lua',           pkgdirs/'meta')
      assert.equal('lua/meta/mcache/init.lua',    pkgdirs/'meta/mcache')
    end)
    it("__mod", function()
      assert.equal('lua/meta/assert.d/init.lua',  (pkgdirs%'meta')['assert.d'])
      assert.equal('lua/meta/is/init.lua',        (pkgdirs%'meta').is)
      assert.equal('lua/meta/loader.lua',         (pkgdirs%'meta').loader)
    end)
  end)
  it("nil", function()
    assert.is_nil(pkgdir())
    assert.is_nil(pkgdir(nil))
    assert.is_nil(pkgdir(nil, nil))
    assert.is_nil(pkgdir(nil, nil, nil))
  end)
end)