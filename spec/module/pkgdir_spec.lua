describe("module.pkgdir", function()
  local meta, is, path, pkgdir, pkgdirs, seen, module
  setup(function()
    meta = require "meta"
    module = meta.module
    is = meta.is
    path = meta.fs.path
    pkgdir = require "meta.module.pkgdir"
    pkgdirs = (table() .. package.path:gmatch('[^;]*')) * pkgdir
    seen = require 'meta.seen'
  end)
  it("meta", function()
    assert.truthy(is)
    assert.truthy(is.callable(pkgdir))
    assert.truthy(is.callable(pkgdirs))
  end)
  describe("pkgdir", function()
    it("tostring", function()
      assert.equal('lua/?.lua', tostring(pkgdirs[1]))
      assert.equal('lua/?/init.lua', tostring(pkgdirs[2]))
    end)
    it("__index", function()
      assert.is_nil(pkgdirs[1].meta)
      assert.equal(path('lua/meta/loader.lua'), pkgdirs[1]['meta/loader'])
      assert.equal(path('lua/meta/module/pkgdir.lua'), pkgdirs[1]['meta/module/pkgdir'])

      assert.is_nil(pkgdirs[2]['meta/loader'])
      assert.equal(path('lua/meta/init.lua'), pkgdirs[2].meta)

      assert.equal('lua/meta/module/pkgdir.lua', tostring(pkgdirs[1]['meta/module/pkgdir']))
    end)
    it("__call", function()
      assert.equal('lua/meta/mcache/init.lua', pkgdirs[2]('lua/meta/mcache'))
      assert.equal('lua/meta.lua', pkgdirs[1]('lua/meta'))
    end)
    it("__div", function()
      assert.equal('lua/meta/init.lua', pkgdirs[2] / 'meta')
      assert.equal('lua/meta/mcache/init.lua', pkgdirs[2] / 'meta/mcache')
      assert.equal('lua/meta/mcache/init.lua', pkgdirs[2] / module('meta/mcache'))

      assert.equal('lua/meta/init.lua', tostring(pkgdirs/'meta'))
      assert.equal('lua/meta/mcache/init.lua', tostring(pkgdirs/'meta/mcache'))
    end)
    it("__mul", function()
      assert.equal(path('lua/meta'), pkgdirs[1]*'meta')
      assert.equal('lua/meta', (pkgdirs*'meta'*seen()*tostring)[1])
    end)
    it("__mod", function()
      assert.same({init='lua/meta/mcache/init.lua', root='lua/meta/mcache/root.lua'}, pkgdirs%'meta/mcache')
      assert.equal('lua/meta/fn/swap.lua', (pkgdirs%'meta/fn').swap)
      assert.same({init='lua/meta/mcache/init.lua', root='lua/meta/mcache/root.lua'}, table()..pkgdirs[1]%'meta/mcache')
    end)
  end)
  it("pkgdirs", function()
    assert.same(table {'lua/?.lua', 'lua/?/init.lua', '?.lua', '?/init.lua'}, (pkgdirs * tostring)[{1, 4}])
    assert.equal(table {path('lua/meta')}, pkgdirs[{1, 4}]*'meta'*seen())
    assert.equal('lua/meta/init.lua', tostring(pkgdirs[{1, 4}] / 'meta'))
    assert.equal('lua/meta/loader.lua', tostring(pkgdirs / 'meta/loader'))
    assert.equal('lua/meta/loader.lua', tostring(pkgdirs[{1, 4}] / 'meta/loader'))
    assert.equal('lua/meta/module/pkgdir.lua', tostring(pkgdirs / 'meta/module/pkgdir'))
  end)
  it("nil", function()
    assert.is_nil(pkgdir())
    assert.is_nil(pkgdir(nil))
    assert.is_nil(pkgdir(nil, nil))
    assert.is_nil(pkgdir(nil, nil, nil))
  end)
end)