describe("module.chain", function()
	local chain, iter
	setup(function()
   iter = require 'meta.iter'
   chain = setmetatable({}, getmetatable(require 'meta.module.chain'))
	end)
  it("test", function()
    assert.equal(0, #chain)
    assert.is_nil(chain[1])
    assert.equal(chain, chain + 'a')
    assert.equal('a',  chain[1])
    assert.equal(true, chain['a'])
    assert.is_nil(chain['b'])
    assert.equal(1, #chain)
    assert.same({'a'}, {}..iter(chain))

    assert.equal(chain, chain + 'b')
    assert.equal('b',  chain[1])
    assert.equal(true, chain['b'])
    assert.equal(2, #chain)
    assert.same({'b','a'}, {}..iter(chain))

    assert.equal(chain, chain + 'b')
    assert.equal('b',  chain[1])
    assert.equal(true, chain['b'])
    assert.equal(2, #chain)
    assert.same({'b','a'}, {}..iter(chain))

    assert.equal(chain, chain + 'c')
    assert.equal('c',  chain[1])
    assert.equal(true, chain['c'])
    assert.equal(3, #chain)
    assert.same({'c','b','a'}, {}..iter(chain))

    assert.equal(chain, chain + 'd')
    assert.equal('d',  chain[1])
    assert.equal(true, chain['d'])
    assert.equal(4, #chain)
    assert.same({'d','c','b','a'}, {}..iter(chain))

    assert.equal(chain, chain - 'd')
    assert.equal('c',  chain[1])
    assert.is_nil(chain['d'])
    assert.equal(3, #chain)
    assert.same({'c','b','a'}, {}..iter(chain))

    assert.equal(chain, chain - 'b')
    assert.equal('c',  chain[1])
    assert.is_nil(chain['b'])
    assert.equal(2, #chain)
    assert.same({'c','a'}, {}..iter(chain))

    assert.equal(chain, chain - 'a')
    assert.equal('c',  chain[1])
    assert.is_nil(chain['a'])
    assert.equal(1, #chain)
    assert.same({'c'}, {}..iter(chain))

    assert.equal(chain, chain - 'c')
    assert.is_nil(chain[1])
    assert.equal(0, #chain)
    assert.same({}, {}..iter(chain))
  end)
end)