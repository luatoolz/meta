describe("is.number.zpositive", function()
  local is
  setup(function()
    require 'meta'
    is = require 'meta.is'
  end)
  it("meta", function()
    assert.callable(is.number.zpositive)
  end)
  it("is.number.zpositive", function()
    for i=0,512 do
      assert.is_true(is.number.zpositive(i))
    end
  end)
  it("is.number.zpositive", function()
    assert.is_nil(is.number.zpositive(true))
    assert.is_nil(is.number.zpositive(false))
    assert.is_nil(is.number.zpositive("0"))
    assert.is_nil(is.number.zpositive("1"))
    assert.is_nil(is.number.zpositive('12'))
    assert.is_nil(is.number.zpositive('77'))
    assert.is_nil(is.number.zpositive(-math.pi))
    assert.is_nil(is.number.zpositive(-1))
    assert.is_nil(is.number.zpositive(""))
    assert.is_nil(is.number.zpositive(' '))
    assert.is_nil(is.number.zpositive('  '))
    assert.is_nil(is.number.zpositive('	'))
    assert.is_nil(is.number.zpositive('		'))
    assert.is_nil(is.number.zpositive("	\r 	"))
    assert.is_nil(is.number.zpositive("	\n 	"))
    assert.is_nil(is.number.zpositive({}))
    assert.is_nil(is.number.zpositive('false'))
    assert.is_nil(is.number.zpositive("FALSE"))
  end)
  it("nil", function()
    assert.is_nil(is.number.zpositive(nil))
    assert.is_nil(is.number.zpositive())
  end)
end)