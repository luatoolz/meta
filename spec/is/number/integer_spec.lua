describe("is.number.integer", function()
  local is
  setup(function()
    require 'meta'
    is = require 'meta.is'
  end)
  it("meta", function()
    assert.callable(is.number.integer)
  end)
  it("is.number.integer", function()
    assert.is_true(is.number.integer(0))
    for i=1,512 do
      assert.is_true(is.number.integer(i))
      assert.is_true(is.number.integer(-i))
    end
  end)
  it("is.number.integer", function()
    assert.is_nil(is.number.integer("0"))
    assert.is_nil(is.number.integer(false))
    assert.is_nil(is.number.integer(true))
    assert.is_nil(is.number.integer(-math.pi))
    assert.is_nil(is.number.integer(math.pi))
    assert.is_nil(is.number.integer(1/2))
    assert.is_nil(is.number.integer(-(1/2)))
    assert.is_nil(is.number.integer(''))
    assert.is_nil(is.number.integer(' '))
    assert.is_nil(is.number.integer('  '))
    assert.is_nil(is.number.integer('	'))
    assert.is_nil(is.number.integer('		'))
    assert.is_nil(is.number.integer("	\r 	"))
    assert.is_nil(is.number.integer("	\n 	"))
    assert.is_nil(is.number.integer({}))
    assert.is_nil(is.number.integer("false"))
    assert.is_nil(is.number.integer("FALSE"))
  end)
  it("nil", function()
    assert.is_nil(is.number.integer(nil))
    assert.is_nil(is.number.integer())
  end)
end)