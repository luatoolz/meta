describe("is.number.natural", function()
  local is
  setup(function()
    require 'meta'
    is = require 'meta.is'
  end)
  it("meta", function()
    assert.callable(is.number.natural)
  end)
  it("positive", function()
    for i=1,512 do
      assert.is_true(is.number.natural(i))
    end
  end)
  it("negative", function()
    assert.is_nil(is.number.natural(true))
    assert.is_nil(is.number.natural("1"))
    assert.is_nil(is.number.natural("0"))
    assert.is_nil(is.number.natural(false))
    assert.is_nil(is.number.natural(math.pi))
    assert.is_nil(is.number.natural(-1))
    assert.is_nil(is.number.natural(0))
    assert.is_nil(is.number.natural(""))
    assert.is_nil(is.number.natural(' '))
    assert.is_nil(is.number.natural('  '))
    assert.is_nil(is.number.natural('	'))
    assert.is_nil(is.number.natural('		'))
    assert.is_nil(is.number.natural("	\r 	"))
    assert.is_nil(is.number.natural("	\n 	"))
    assert.is_nil(is.number.natural({}))
    assert.is_nil(is.number.natural("false"))
    assert.is_nil(is.number.natural("FALSE"))
  end)
  it("nil", function()
    assert.is_nil(is.number.natural(nil))
    assert.is_nil(is.number.natural())
  end)
end)