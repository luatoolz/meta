describe("has.value", function()
	local meta, is, has
	setup(function()
    meta = require "meta"
    is = meta.is
    has = is.has
	end)
  it("meta", function()
    assert.truthy(is)
    assert.truthy(has.value)
    assert.truthy(is.callable(has.value))
  end)
  it("positive", function()
    assert.is_true(has.value('a', {'a'}))
    assert.is_true(has.value('a', {'a', 'b'}))
    assert.is_true(has.value('a', {'b', 'a'}))
    assert.is_true(has.value(true, {true}))
    assert.is_true(has.value(true, {true, 'b'}))
    assert.is_true(has.value(true, {true, false}))
    assert.is_true(has.value(false, {false}))
    assert.is_true(has.value(false, {false, 'b'}))
    assert.is_true(has.value(false, {true, false}))

    assert.is_true(has.value('a', {a='a'}))
    assert.is_true(has.value('a', {a='a', b='b'}))
    assert.is_true(has.value('a', {b='b', a='a'}))
    assert.is_true(has.value(true, {[true]=true}))
    assert.is_true(has.value(true, {[false]=true}))
    assert.is_true(has.value(true, {[true]=true, [false]='b'}))
    assert.is_true(has.value(true, {[false]=true, [true]=false}))
    assert.is_true(has.value(false, {[true]=false}))
    assert.is_true(has.value(false, {[false]=false}))
    assert.is_true(has.value(false, {[true]=false, [false]='b'}))
    assert.is_true(has.value(false, {[false]=false, [true]='b'}))
    assert.is_true(has.value(false, {[true]=true, [false]=false}))
    assert.is_true(has.value(false, {[false]=true, [true]=false}))
  end)
  it("negative", function()
    assert.is_nil(has.value('a', {}))
    assert.is_nil(has.value('a', {'b'}))
    assert.is_nil(has.value('a', {'b','c'}))
    assert.is_nil(has.value('a', {nil}))
    assert.is_nil(has.value('a', {true}))
    assert.is_nil(has.value('a', {77}))
    assert.is_nil(has.value('a', {table.remove}))
    assert.is_nil(has.value('a'))
    assert.is_nil(has.value('a', nil))
    assert.is_nil(has.value('a', true))
    assert.is_nil(has.value('a', 'some'))
    assert.is_nil(has.value('a', 77))
    assert.is_nil(has.value('a', table.remove))
  end)
  it("nil", function()
    assert.is_nil(has.value(nil, nil))
    assert.is_nil(has.value(nil))
    assert.is_nil(has.value())
  end)
end)