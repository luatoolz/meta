describe("string.join", function()
	local meta, is, empty, sep, dot
	setup(function()
    meta = require "meta"
    is = meta.is
    empty = ''
    sep = string.sep
    dot = string.dot
	end)
  it("meta", function()
    assert.truthy(is)
    assert.truthy(is.callable(string.join))
  end)
  it("positive", function()
    assert.equal("google.com", dot:join("google", "com"))
    assert.equal("www.google.com", dot:join("www", "google", "com"))
    assert.equal("x", empty:join('', '', "x"))
    assert.equal("x", empty:join('', 'x', ""))
    assert.equal("x", empty:join('x', ""))
    assert.equal("x", empty:join('', "x"))
    assert.equal('a.b', dot:join('a', 'b'))
    assert.equal('a.b', dot:join('a.', 'b'))
    assert.equal('a.b', dot:join('a', '.b'))
    assert.equal('a.b', dot:join('a.', '.b'))
    assert.equal('a', sep:join('a', ''))
    assert.equal('a', sep:join('a/', ''))
    assert.equal('/b', sep:join('', '/b'))
    assert.equal('/b', sep:join('/', '/b'))
    assert.equal('/', sep:join('', '') or '')
    assert.equal('default', sep:join(nil, '') or 'default')

    assert.equal(sep, sep:join('',''))
    assert.equal(sep, sep:join('','',''))
  end)
  it("negative", function()
    assert.is_nil(sep:join(''))
    assert.is_nil(sep:join('',nil))
    assert.is_nil(sep:join({}))
    assert.is_nil(sep:join(0))
    assert.is_nil(sep:join(1))
    assert.is_nil(sep:join(false))
    assert.is_nil(sep:join(true))
  end)
  it("nil", function()
    assert.is_nil(empty:join(nil,nil,nil))
    assert.is_nil(empty:join(nil,nil))
    assert.is_nil(empty:join(nil))
    assert.is_nil(empty:join())
  end)
end)